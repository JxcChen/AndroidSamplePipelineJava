pipeline{
    agent {
        label 'master'
    }

    stages{
        stage('获取源码') {
            parallel {
                stage('安卓程序源码') {
                    steps {
                        bat 'md AndroidSampleApp'
                        dir("AndroidSampleApp"){
                            git branch:'master', url:'git@github.com:JxcChen/AndroidSampleApp.git'
                        }
                    }
                }

                stage('自动测试程序源码') {
                    steps {
                        bat 'md  iAppBVT'
                        dir("iAppBVT"){
                            git branch:'master', url:'git@github.com:JxcChen/iAppBVT.git'
                        }
                    }
                }
            }
        }

        stage('安卓编译打包') {
            steps {
                bat '''
                    cd AndroidSampleApp
                    gradle clean assembleDebug
                '''
            }
        }

        stage('测试与发布') {
            parallel {
                stage('发布测试包') {
                    steps {
                        archiveArtifacts artifacts: 'AndroidSampleApp/app/build/outputs/apk/debug/app-debug.apk'
                    }
                }

                stage('自动化'){
                    stages{
                        stage('部署') {
                            steps {
                                bat '''
                                    (adb uninstall com.appsflyer.androidsampleapp) || (echo "can not find com.appsflyer.androidsampleapp")

                                    #安装安卓app
                                    adb install ..\\app_pack\\AndroidSampleApp\\app\\build\\outputs\\apk\\debug\\app-debug.apk

                                '''
                            }
                        }

                        stage('自动测试') {
                            steps {
                                bat '''

                                    cd iAppBVT
                                    mvn clean install
                                '''
                            }
                        }
                    }
                }
            }
        }
    }

    post {
        always {
            emailext body: '$DEFAULT_CONTENT', recipientProviders: [[$class: 'RequesterRecipientProvider']], subject: '$DEFAULT_SUBJECT'
        }
    }
}